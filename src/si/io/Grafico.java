/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package si.io;

import java.awt.image.BufferedImage;
import java.util.List;
import javax.swing.ImageIcon;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.xy.DefaultXYDataset;

/**
 *
 * @author mireia
 */

public class Grafico extends javax.swing.JFrame {

    
    public Grafico(){
        
    }

 /** Creates new form TestJFreeChartInsideJFrame */
 public Grafico(List<byte[]> vectorPrueba, byte[][] centroides, byte[][] cenIniciales) {
    initComponents();

    //Crea la primera serie con los puntos
    double [][]serie1 = new double[2][vectorPrueba.size()];
    for(int i=0; i<vectorPrueba.size(); i++){
        serie1[0][i] = vectorPrueba.get(i)[0];
        serie1[1][i] = vectorPrueba.get(i)[1];
    }
    
    //Crea la segunda serie con el resultado del k-medias
    double [][]serie2 = new double[2][centroides.length];
    for(int i=0; i<centroides.length; i++){
        serie2[0][i] = centroides[i][0];
        serie2[1][i] = centroides[i][1];
    }
    
    //Crea la tercera serie con los centroides iniciales
    double [][]serie3 = new double[2][cenIniciales.length];
    for(int i=0; i<cenIniciales.length; i++){
        serie3[0][i] = cenIniciales[i][0];
        serie3[1][i] = cenIniciales[i][1];
    }
    
    //Añade las 2 series
    DefaultXYDataset xyDataset = new DefaultXYDataset();
    xyDataset.addSeries("k-Medias", serie2);
    xyDataset.addSeries("Iniciales", serie3);
    xyDataset.addSeries("Puntos", serie1);
   
    JFreeChart chart = ChartFactory.createScatterPlot
        ("Solución K-medias", 
        "X", 
        "Y", 
        xyDataset,
        PlotOrientation.HORIZONTAL,
        rootPaneCheckingEnabled, 
        rootPaneCheckingEnabled, 
        rootPaneCheckingEnabled);
    
    /*JFreeChart chart = ChartFactory.createXYAreaChart
    ("Sample XY Chart",  // Title
    "Height",           // X-Axis label
    "Weight",           // Y-Axis label
    xyDataset,          // Dataset
    PlotOrientation.HORIZONTAL,
    true, false, false);*/

    
    BufferedImage image = chart.createBufferedImage(800,600);
    jLabel1.setIcon(new ImageIcon(image));
    pack();
    repaint();
 }


 
 /** This method is called from within the constructor to
 * initialize the form.
 * WARNING: Do NOT modify this code. The content of this method is
 * always regenerated by the Form Editor.
 */
 @SuppressWarnings("unchecked")
 // <editor-fold defaultstate="collapsed" desc="Generated Code">
 private void initComponents() {

    jLabel1 = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    getContentPane().setLayout(new java.awt.FlowLayout());
    getContentPane().add(jLabel1);

    pack();
 }// </editor-fold>

 /**
 * @param args the command line arguments
 */
/* public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            new Grafico().setVisible(true);
        }
    });
 }*/
 
 public void run(List<byte[]> vectorPrueba, byte[][] centroides, byte[][] cenIniciales){
     new Grafico(vectorPrueba, centroides, cenIniciales).setVisible(true);
 }


 // Variables declaration - do not modify
 private javax.swing.JLabel jLabel1;
 // End of variables declaration

}

